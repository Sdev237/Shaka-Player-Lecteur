{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jedeo\\\\Bureau\\\\lecteur player\\\\src\\\\components\\\\VideoPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport shaka from \"shaka-player\";\nimport \"shaka-player/dist/controls.css\";\nimport \"./VideoPlayer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PLAYLIST = [{\n  titre: \"Live Test (DASH-IF)\",\n  sousTitre: \"Flux en direct de test DASH-IF\",\n  url: \"https://livesim.dashif.org/livesim/testpic_2s/Manifest.mpd\",\n  live: true\n}, {\n  titre: \"Captain Luck (Angel One)\",\n  sousTitre: \"Bande-annonce\",\n  url: \"https://storage.googleapis.com/shaka-demo-assets/angel-one/dash.mpd\",\n  live: false\n}, {\n  titre: \"Big Buck Bunny\",\n  sousTitre: \"Démonstration DASH\",\n  url: \"https://dash.akamaized.net/akamai/bbb_30fps/bbb_30fps.mpd\",\n  live: false\n}, {\n  titre: \"Tears of Steel\",\n  sousTitre: \"Film de démo DASH\",\n  url: \"https://bitmovin-a.akamaihd.net/content/tears_of_steel/manifest.mpd\",\n  live: false\n}, {\n  titre: \"Envivio Live\",\n  sousTitre: \"Flux live multi-bitrate\",\n  url: \"https://wowzaec2demo.streamlock.net/live/bigbuckbunny/manifest_mpm4sav_mvtime.mpd\",\n  live: true\n}, {\n  titre: \"Sintel\",\n  sousTitre: \"Film d'animation DASH\",\n  url: \"https://bitmovin-a.akamaihd.net/content/sintel/sintel.mpd\",\n  live: false\n}];\nconst VideoPlayer = () => {\n  _s();\n  const videoRef = useRef(null);\n  const playerRef = useRef(null);\n  const [isLive, setIsLive] = useState(false);\n  const [qualities, setQualities] = useState([]);\n  const [selectedQuality, setSelectedQuality] = useState(\"auto\");\n  const [textTracks, setTextTracks] = useState([]);\n  const [selectedText, setSelectedText] = useState(\"off\");\n  const [audioTracks, setAudioTracks] = useState([]);\n  const [selectedAudio, setSelectedAudio] = useState(\"auto\");\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isAtLiveEdge, setIsAtLiveEdge] = useState(true);\n  const [showPlaylist, setShowPlaylist] = useState(false);\n  const currentVideo = PLAYLIST[currentIndex];\n  const isCurrentlyLive = currentVideo.live;\n\n  // Séparer la playlist VOD de la playlist totale\n  const VOD_PLAYLIST = PLAYLIST.filter(v => !v.live);\n  useEffect(() => {\n    const initPlayer = async (url = currentVideo.url, live = currentVideo.live) => {\n      if (!videoRef.current) return;\n      const player = new shaka.Player(videoRef.current);\n      playerRef.current = player;\n      const drmConfig = {\n        servers: {\n          \"com.widevine.alpha\": \"https://license.widevine.com/getlicense\"\n        }\n      };\n      player.configure(\"drm\", drmConfig);\n      const adConfig = {\n        adTagUrl: \"https://pubads.g.doubleclick.net/gampad/ads?iu=/21775744923/external/single_preroll_skippable&sz=640x480&ciu_szs=300x250%2C728x90&gdfp_req=1&output=vast&unviewed_position_start=1&env=vp&impl=s&correlator=\"\n      };\n      player.configure(\"ad\", adConfig);\n      player.addEventListener(\"adaptation\", () => {\n        const tracks = player.getVariantTracks();\n        setQualities(tracks);\n        setAudioTracks(player.getVariantTracks().filter((t, i, arr) => arr.findIndex(tt => tt.language === t.language) === i));\n        setTextTracks(player.getTextTracks());\n      });\n      try {\n        await player.load(url);\n        setIsLive(live);\n        const tracks = player.getVariantTracks();\n        setQualities(tracks);\n        setAudioTracks(player.getVariantTracks().filter((t, i, arr) => arr.findIndex(tt => tt.language === t.language) === i));\n        setTextTracks(player.getTextTracks());\n        if (videoRef.current) {\n          videoRef.current.play().catch(() => {});\n        }\n        // Gestion du live edge\n        if (live) {\n          setIsAtLiveEdge(true);\n          videoRef.current.addEventListener(\"timeupdate\", handleLiveEdgeCheck);\n        }\n      } catch (error) {\n        console.error(\"Erreur lors du chargement de la vidéo:\", error);\n      }\n      // Passage à la vidéo suivante à la fin\n      videoRef.current.onended = () => {\n        if (currentIndex < PLAYLIST.length - 1) {\n          setCurrentIndex(currentIndex + 1);\n        }\n      };\n    };\n    initPlayer();\n    return () => {\n      if (playerRef.current) {\n        playerRef.current.destroy();\n      }\n      if (videoRef.current) {\n        videoRef.current.removeEventListener(\"timeupdate\", handleLiveEdgeCheck);\n      }\n    };\n    // eslint-disable-next-line\n  }, [currentIndex]);\n\n  // Fonction pour vérifier si on est à la pointe du live\n  const handleLiveEdgeCheck = () => {\n    if (!videoRef.current || !playerRef.current || !playerRef.current.isLive()) return;\n    const liveEdge = playerRef.current.seekRange().end;\n    const current = videoRef.current.currentTime;\n    // Si on est à moins de 2 secondes de la fin du buffer, on est \"en direct\"\n    setIsAtLiveEdge(liveEdge - current < 2);\n  };\n\n  // En mode live, désactiver le seek\n  useEffect(() => {\n    if (isCurrentlyLive && videoRef.current) {\n      videoRef.current.addEventListener(\"seeking\", preventSeekLive);\n      return () => {\n        videoRef.current.removeEventListener(\"seeking\", preventSeekLive);\n      };\n    }\n  }, [isCurrentlyLive]);\n  const preventSeekLive = e => {\n    if (!playerRef.current || !playerRef.current.isLive()) return;\n    const liveEdge = playerRef.current.seekRange().end;\n    // Si l'utilisateur tente de reculer, on le remet à la pointe\n    if (videoRef.current.currentTime < liveEdge - 2) {\n      videoRef.current.currentTime = liveEdge;\n    }\n  };\n\n  // Bouton revenir au direct\n  const goToLiveEdge = () => {\n    if (playerRef.current && videoRef.current && playerRef.current.isLive()) {\n      const liveEdge = playerRef.current.seekRange().end;\n      videoRef.current.currentTime = liveEdge;\n      setIsAtLiveEdge(true);\n    }\n  };\n  const avancer = () => {\n    if (videoRef.current) {\n      videoRef.current.currentTime += 10;\n    }\n  };\n  const reculer = () => {\n    if (videoRef.current) {\n      videoRef.current.currentTime -= 10;\n    }\n  };\n  const handleQualityChange = e => {\n    const value = e.target.value;\n    setSelectedQuality(value);\n    if (playerRef.current) {\n      if (value === \"auto\") {\n        playerRef.current.configure({\n          abr: {\n            enabled: true\n          }\n        });\n      } else {\n        playerRef.current.configure({\n          abr: {\n            enabled: false\n          }\n        });\n        const track = qualities.find(q => q.id.toString() === value);\n        if (track) {\n          playerRef.current.selectVariantTrack(track, /* clearBuffer= */true);\n        }\n      }\n    }\n  };\n  const handleTextChange = e => {\n    const value = e.target.value;\n    setSelectedText(value);\n    if (playerRef.current) {\n      if (value === \"off\") {\n        playerRef.current.setTextTrackVisibility(false);\n      } else {\n        playerRef.current.setTextTrackVisibility(true);\n        const track = textTracks.find(t => t.language === value);\n        if (track) {\n          playerRef.current.selectTextLanguage(track.language);\n        }\n      }\n    }\n  };\n  const handleAudioChange = e => {\n    const value = e.target.value;\n    setSelectedAudio(value);\n    if (playerRef.current) {\n      if (value === \"auto\") {\n        playerRef.current.configure({\n          abr: {\n            enabled: true\n          }\n        });\n      } else {\n        playerRef.current.configure({\n          abr: {\n            enabled: false\n          }\n        });\n        const track = audioTracks.find(t => t.language === value);\n        if (track) {\n          playerRef.current.selectAudioLanguage(track.language);\n        }\n      }\n    }\n  };\n  const handleSelectVideo = idx => {\n    setCurrentIndex(idx);\n  };\n  const handleGoLiveOrVod = () => {\n    if (isCurrentlyLive) {\n      // Retour au premier flux VOD\n      const firstVodIndex = PLAYLIST.findIndex(v => !v.live);\n      if (firstVodIndex !== -1) {\n        setCurrentIndex(firstVodIndex);\n      }\n    } else {\n      // Aller au premier flux live\n      const liveIndex = PLAYLIST.findIndex(v => v.live);\n      if (liveIndex !== -1) {\n        setCurrentIndex(liveIndex);\n        if (liveIndex === currentIndex && videoRef.current && playerRef.current) {\n          playerRef.current.load(PLAYLIST[liveIndex].url).then(() => {\n            setIsLive(true);\n            videoRef.current.play().catch(() => {});\n          });\n        }\n      }\n    }\n  };\n  const handleOpenPlaylist = () => setShowPlaylist(true);\n  const handleClosePlaylist = () => setShowPlaylist(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lecteur-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lecteur-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"lecteur-retour\",\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lecteur-titre\",\n          children: currentVideo.titre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lecteur-sous-titre\",\n          children: currentVideo.sousTitre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lecteur-video-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        controls: true,\n        className: \"lecteur-video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), isLive && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"lecteur-live\" + (isAtLiveEdge ? \"\" : \" lecteur-live-retard\"),\n        children: isAtLiveEdge ? \"EN DIRECT\" : \"EN RETARD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), isLive && !isAtLiveEdge && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"lecteur-bouton-live-retard\",\n        onClick: goToLiveEdge,\n        children: \"Revenir au direct\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lecteur-boutons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: reculer,\n        className: \"lecteur-bouton\",\n        children: \"\\u23EA 10s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: avancer,\n        className: \"lecteur-bouton\",\n        children: \"10s \\u23E9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGoLiveOrVod,\n        className: \"lecteur-bouton-live\",\n        children: isCurrentlyLive ? \"Retour VOD\" : \"Passer en direct\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedQuality,\n        onChange: handleQualityChange,\n        className: \"lecteur-select-qualite\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"auto\",\n          children: \"Qualit\\xE9 : Auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), qualities.filter((q, idx, arr) => arr.findIndex(t => t.height === q.height) === idx).sort((a, b) => b.height - a.height).map(q => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: q.id,\n          children: q.height ? q.height + \"p\" : q.bandwidth + \"bps\"\n        }, q.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedAudio,\n        onChange: handleAudioChange,\n        className: \"lecteur-select-qualite\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"auto\",\n          children: \"Audio : Auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), audioTracks.filter((a, idx, arr) => arr.findIndex(t => t.language === a.language) === idx).map(a => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: a.language,\n          children: a.language\n        }, a.language, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedText,\n        onChange: handleTextChange,\n        className: \"lecteur-select-qualite\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"off\",\n          children: \"Sous-titres : Aucun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), textTracks.filter((t, idx, arr) => arr.findIndex(tt => tt.language === t.language) === idx).map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: t.language,\n          children: t.language\n        }, t.language, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOpenPlaylist,\n        className: \"lecteur-bouton-playlist\",\n        children: \"Playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), showPlaylist && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lecteur-playlist-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"lecteur-playlist-close\",\n        onClick: handleClosePlaylist,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lecteur-playlist-list\",\n        children: VOD_PLAYLIST.map((video, idx) => {\n          // Trouver l'index réel dans PLAYLIST pour la sélection\n          const realIdx = PLAYLIST.findIndex(v => v.url === video.url);\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `lecteur-playlist-item${realIdx === currentIndex ? \" active\" : \"\"}`,\n            onClick: () => {\n              handleSelectVideo(realIdx);\n              handleClosePlaylist();\n            },\n            children: [video.titre, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: \"0.9em\",\n                color: \"#bdbdbd\"\n              },\n              children: [\"(\", video.sousTitre, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 19\n            }, this)]\n          }, video.url, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"odujHfMeQGvvf86Y1Sywqb+CDA0=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","shaka","jsxDEV","_jsxDEV","PLAYLIST","titre","sousTitre","url","live","VideoPlayer","_s","videoRef","playerRef","isLive","setIsLive","qualities","setQualities","selectedQuality","setSelectedQuality","textTracks","setTextTracks","selectedText","setSelectedText","audioTracks","setAudioTracks","selectedAudio","setSelectedAudio","currentIndex","setCurrentIndex","isAtLiveEdge","setIsAtLiveEdge","showPlaylist","setShowPlaylist","currentVideo","isCurrentlyLive","VOD_PLAYLIST","filter","v","initPlayer","current","player","Player","drmConfig","servers","configure","adConfig","adTagUrl","addEventListener","tracks","getVariantTracks","t","i","arr","findIndex","tt","language","getTextTracks","load","play","catch","handleLiveEdgeCheck","error","console","onended","length","destroy","removeEventListener","liveEdge","seekRange","end","currentTime","preventSeekLive","e","goToLiveEdge","avancer","reculer","handleQualityChange","value","target","abr","enabled","track","find","q","id","toString","selectVariantTrack","handleTextChange","setTextTrackVisibility","selectTextLanguage","handleAudioChange","selectAudioLanguage","handleSelectVideo","idx","handleGoLiveOrVod","firstVodIndex","liveIndex","then","handleOpenPlaylist","handleClosePlaylist","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","controls","onClick","onChange","height","sort","a","b","map","bandwidth","video","realIdx","style","fontSize","color","_c","$RefreshReg$"],"sources":["C:/Users/jedeo/Bureau/lecteur player/src/components/VideoPlayer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport shaka from \"shaka-player\";\r\nimport \"shaka-player/dist/controls.css\";\r\nimport \"./VideoPlayer.css\";\r\n\r\nconst PLAYLIST = [\r\n  {\r\n    titre: \"Live Test (DASH-IF)\",\r\n    sousTitre: \"Flux en direct de test DASH-IF\",\r\n    url: \"https://livesim.dashif.org/livesim/testpic_2s/Manifest.mpd\",\r\n    live: true,\r\n  },\r\n  {\r\n    titre: \"Captain Luck (Angel One)\",\r\n    sousTitre: \"Bande-annonce\",\r\n    url: \"https://storage.googleapis.com/shaka-demo-assets/angel-one/dash.mpd\",\r\n    live: false,\r\n  },\r\n  {\r\n    titre: \"Big Buck Bunny\",\r\n    sousTitre: \"Démonstration DASH\",\r\n    url: \"https://dash.akamaized.net/akamai/bbb_30fps/bbb_30fps.mpd\",\r\n    live: false,\r\n  },\r\n  {\r\n    titre: \"Tears of Steel\",\r\n    sousTitre: \"Film de démo DASH\",\r\n    url: \"https://bitmovin-a.akamaihd.net/content/tears_of_steel/manifest.mpd\",\r\n    live: false,\r\n  },\r\n  {\r\n    titre: \"Envivio Live\",\r\n    sousTitre: \"Flux live multi-bitrate\",\r\n    url: \"https://wowzaec2demo.streamlock.net/live/bigbuckbunny/manifest_mpm4sav_mvtime.mpd\",\r\n    live: true,\r\n  },\r\n  {\r\n    titre: \"Sintel\",\r\n    sousTitre: \"Film d'animation DASH\",\r\n    url: \"https://bitmovin-a.akamaihd.net/content/sintel/sintel.mpd\",\r\n    live: false,\r\n  },\r\n];\r\n\r\nconst VideoPlayer = () => {\r\n  const videoRef = useRef(null);\r\n  const playerRef = useRef(null);\r\n  const [isLive, setIsLive] = useState(false);\r\n  const [qualities, setQualities] = useState([]);\r\n  const [selectedQuality, setSelectedQuality] = useState(\"auto\");\r\n  const [textTracks, setTextTracks] = useState([]);\r\n  const [selectedText, setSelectedText] = useState(\"off\");\r\n  const [audioTracks, setAudioTracks] = useState([]);\r\n  const [selectedAudio, setSelectedAudio] = useState(\"auto\");\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [isAtLiveEdge, setIsAtLiveEdge] = useState(true);\r\n  const [showPlaylist, setShowPlaylist] = useState(false);\r\n\r\n  const currentVideo = PLAYLIST[currentIndex];\r\n  const isCurrentlyLive = currentVideo.live;\r\n\r\n  // Séparer la playlist VOD de la playlist totale\r\n  const VOD_PLAYLIST = PLAYLIST.filter((v) => !v.live);\r\n\r\n  useEffect(() => {\r\n    const initPlayer = async (\r\n      url = currentVideo.url,\r\n      live = currentVideo.live\r\n    ) => {\r\n      if (!videoRef.current) return;\r\n      const player = new shaka.Player(videoRef.current);\r\n      playerRef.current = player;\r\n      const drmConfig = {\r\n        servers: {\r\n          \"com.widevine.alpha\": \"https://license.widevine.com/getlicense\",\r\n        },\r\n      };\r\n      player.configure(\"drm\", drmConfig);\r\n      const adConfig = {\r\n        adTagUrl:\r\n          \"https://pubads.g.doubleclick.net/gampad/ads?iu=/21775744923/external/single_preroll_skippable&sz=640x480&ciu_szs=300x250%2C728x90&gdfp_req=1&output=vast&unviewed_position_start=1&env=vp&impl=s&correlator=\",\r\n      };\r\n      player.configure(\"ad\", adConfig);\r\n      player.addEventListener(\"adaptation\", () => {\r\n        const tracks = player.getVariantTracks();\r\n        setQualities(tracks);\r\n        setAudioTracks(\r\n          player\r\n            .getVariantTracks()\r\n            .filter(\r\n              (t, i, arr) =>\r\n                arr.findIndex((tt) => tt.language === t.language) === i\r\n            )\r\n        );\r\n        setTextTracks(player.getTextTracks());\r\n      });\r\n      try {\r\n        await player.load(url);\r\n        setIsLive(live);\r\n        const tracks = player.getVariantTracks();\r\n        setQualities(tracks);\r\n        setAudioTracks(\r\n          player\r\n            .getVariantTracks()\r\n            .filter(\r\n              (t, i, arr) =>\r\n                arr.findIndex((tt) => tt.language === t.language) === i\r\n            )\r\n        );\r\n        setTextTracks(player.getTextTracks());\r\n        if (videoRef.current) {\r\n          videoRef.current.play().catch(() => {});\r\n        }\r\n        // Gestion du live edge\r\n        if (live) {\r\n          setIsAtLiveEdge(true);\r\n          videoRef.current.addEventListener(\"timeupdate\", handleLiveEdgeCheck);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Erreur lors du chargement de la vidéo:\", error);\r\n      }\r\n      // Passage à la vidéo suivante à la fin\r\n      videoRef.current.onended = () => {\r\n        if (currentIndex < PLAYLIST.length - 1) {\r\n          setCurrentIndex(currentIndex + 1);\r\n        }\r\n      };\r\n    };\r\n    initPlayer();\r\n    return () => {\r\n      if (playerRef.current) {\r\n        playerRef.current.destroy();\r\n      }\r\n      if (videoRef.current) {\r\n        videoRef.current.removeEventListener(\"timeupdate\", handleLiveEdgeCheck);\r\n      }\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [currentIndex]);\r\n\r\n  // Fonction pour vérifier si on est à la pointe du live\r\n  const handleLiveEdgeCheck = () => {\r\n    if (!videoRef.current || !playerRef.current || !playerRef.current.isLive())\r\n      return;\r\n    const liveEdge = playerRef.current.seekRange().end;\r\n    const current = videoRef.current.currentTime;\r\n    // Si on est à moins de 2 secondes de la fin du buffer, on est \"en direct\"\r\n    setIsAtLiveEdge(liveEdge - current < 2);\r\n  };\r\n\r\n  // En mode live, désactiver le seek\r\n  useEffect(() => {\r\n    if (isCurrentlyLive && videoRef.current) {\r\n      videoRef.current.addEventListener(\"seeking\", preventSeekLive);\r\n      return () => {\r\n        videoRef.current.removeEventListener(\"seeking\", preventSeekLive);\r\n      };\r\n    }\r\n  }, [isCurrentlyLive]);\r\n\r\n  const preventSeekLive = (e) => {\r\n    if (!playerRef.current || !playerRef.current.isLive()) return;\r\n    const liveEdge = playerRef.current.seekRange().end;\r\n    // Si l'utilisateur tente de reculer, on le remet à la pointe\r\n    if (videoRef.current.currentTime < liveEdge - 2) {\r\n      videoRef.current.currentTime = liveEdge;\r\n    }\r\n  };\r\n\r\n  // Bouton revenir au direct\r\n  const goToLiveEdge = () => {\r\n    if (playerRef.current && videoRef.current && playerRef.current.isLive()) {\r\n      const liveEdge = playerRef.current.seekRange().end;\r\n      videoRef.current.currentTime = liveEdge;\r\n      setIsAtLiveEdge(true);\r\n    }\r\n  };\r\n\r\n  const avancer = () => {\r\n    if (videoRef.current) {\r\n      videoRef.current.currentTime += 10;\r\n    }\r\n  };\r\n  const reculer = () => {\r\n    if (videoRef.current) {\r\n      videoRef.current.currentTime -= 10;\r\n    }\r\n  };\r\n  const handleQualityChange = (e) => {\r\n    const value = e.target.value;\r\n    setSelectedQuality(value);\r\n    if (playerRef.current) {\r\n      if (value === \"auto\") {\r\n        playerRef.current.configure({ abr: { enabled: true } });\r\n      } else {\r\n        playerRef.current.configure({ abr: { enabled: false } });\r\n        const track = qualities.find((q) => q.id.toString() === value);\r\n        if (track) {\r\n          playerRef.current.selectVariantTrack(track, /* clearBuffer= */ true);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleTextChange = (e) => {\r\n    const value = e.target.value;\r\n    setSelectedText(value);\r\n    if (playerRef.current) {\r\n      if (value === \"off\") {\r\n        playerRef.current.setTextTrackVisibility(false);\r\n      } else {\r\n        playerRef.current.setTextTrackVisibility(true);\r\n        const track = textTracks.find((t) => t.language === value);\r\n        if (track) {\r\n          playerRef.current.selectTextLanguage(track.language);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleAudioChange = (e) => {\r\n    const value = e.target.value;\r\n    setSelectedAudio(value);\r\n    if (playerRef.current) {\r\n      if (value === \"auto\") {\r\n        playerRef.current.configure({ abr: { enabled: true } });\r\n      } else {\r\n        playerRef.current.configure({ abr: { enabled: false } });\r\n        const track = audioTracks.find((t) => t.language === value);\r\n        if (track) {\r\n          playerRef.current.selectAudioLanguage(track.language);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleSelectVideo = (idx) => {\r\n    setCurrentIndex(idx);\r\n  };\r\n  const handleGoLiveOrVod = () => {\r\n    if (isCurrentlyLive) {\r\n      // Retour au premier flux VOD\r\n      const firstVodIndex = PLAYLIST.findIndex((v) => !v.live);\r\n      if (firstVodIndex !== -1) {\r\n        setCurrentIndex(firstVodIndex);\r\n      }\r\n    } else {\r\n      // Aller au premier flux live\r\n      const liveIndex = PLAYLIST.findIndex((v) => v.live);\r\n      if (liveIndex !== -1) {\r\n        setCurrentIndex(liveIndex);\r\n        if (\r\n          liveIndex === currentIndex &&\r\n          videoRef.current &&\r\n          playerRef.current\r\n        ) {\r\n          playerRef.current.load(PLAYLIST[liveIndex].url).then(() => {\r\n            setIsLive(true);\r\n            videoRef.current.play().catch(() => {});\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleOpenPlaylist = () => setShowPlaylist(true);\r\n  const handleClosePlaylist = () => setShowPlaylist(false);\r\n\r\n  return (\r\n    <div className=\"lecteur-container\">\r\n      <div className=\"lecteur-header\">\r\n        <span className=\"lecteur-retour\">&#8592;</span>\r\n        <div>\r\n          <div className=\"lecteur-titre\">{currentVideo.titre}</div>\r\n          <div className=\"lecteur-sous-titre\">{currentVideo.sousTitre}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"lecteur-video-wrapper\">\r\n        <video ref={videoRef} controls className=\"lecteur-video\" />\r\n        {isLive && (\r\n          <span\r\n            className={\r\n              \"lecteur-live\" + (isAtLiveEdge ? \"\" : \" lecteur-live-retard\")\r\n            }\r\n          >\r\n            {isAtLiveEdge ? \"EN DIRECT\" : \"EN RETARD\"}\r\n          </span>\r\n        )}\r\n        {isLive && !isAtLiveEdge && (\r\n          <button className=\"lecteur-bouton-live-retard\" onClick={goToLiveEdge}>\r\n            Revenir au direct\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"lecteur-boutons\">\r\n        <button onClick={reculer} className=\"lecteur-bouton\">\r\n          ⏪ 10s\r\n        </button>\r\n        <button onClick={avancer} className=\"lecteur-bouton\">\r\n          10s ⏩\r\n        </button>\r\n        <button onClick={handleGoLiveOrVod} className=\"lecteur-bouton-live\">\r\n          {isCurrentlyLive ? \"Retour VOD\" : \"Passer en direct\"}\r\n        </button>\r\n        <select\r\n          value={selectedQuality}\r\n          onChange={handleQualityChange}\r\n          className=\"lecteur-select-qualite\"\r\n        >\r\n          <option value=\"auto\">Qualité : Auto</option>\r\n          {qualities\r\n            .filter(\r\n              (q, idx, arr) =>\r\n                arr.findIndex((t) => t.height === q.height) === idx\r\n            )\r\n            .sort((a, b) => b.height - a.height)\r\n            .map((q) => (\r\n              <option key={q.id} value={q.id}>\r\n                {q.height ? q.height + \"p\" : q.bandwidth + \"bps\"}\r\n              </option>\r\n            ))}\r\n        </select>\r\n        <select\r\n          value={selectedAudio}\r\n          onChange={handleAudioChange}\r\n          className=\"lecteur-select-qualite\"\r\n        >\r\n          <option value=\"auto\">Audio : Auto</option>\r\n          {audioTracks\r\n            .filter(\r\n              (a, idx, arr) =>\r\n                arr.findIndex((t) => t.language === a.language) === idx\r\n            )\r\n            .map((a) => (\r\n              <option key={a.language} value={a.language}>\r\n                {a.language}\r\n              </option>\r\n            ))}\r\n        </select>\r\n        <select\r\n          value={selectedText}\r\n          onChange={handleTextChange}\r\n          className=\"lecteur-select-qualite\"\r\n        >\r\n          <option value=\"off\">Sous-titres : Aucun</option>\r\n          {textTracks\r\n            .filter(\r\n              (t, idx, arr) =>\r\n                arr.findIndex((tt) => tt.language === t.language) === idx\r\n            )\r\n            .map((t) => (\r\n              <option key={t.language} value={t.language}>\r\n                {t.language}\r\n              </option>\r\n            ))}\r\n        </select>\r\n        <button\r\n          onClick={handleOpenPlaylist}\r\n          className=\"lecteur-bouton-playlist\"\r\n        >\r\n          Playlist\r\n        </button>\r\n      </div>\r\n      {showPlaylist && (\r\n        <div className=\"lecteur-playlist-popup\">\r\n          <button\r\n            className=\"lecteur-playlist-close\"\r\n            onClick={handleClosePlaylist}\r\n          >\r\n            X\r\n          </button>\r\n          <div className=\"lecteur-playlist-list\">\r\n            {VOD_PLAYLIST.map((video, idx) => {\r\n              // Trouver l'index réel dans PLAYLIST pour la sélection\r\n              const realIdx = PLAYLIST.findIndex((v) => v.url === video.url);\r\n              return (\r\n                <button\r\n                  key={video.url}\r\n                  className={`lecteur-playlist-item${\r\n                    realIdx === currentIndex ? \" active\" : \"\"\r\n                  }`}\r\n                  onClick={() => {\r\n                    handleSelectVideo(realIdx);\r\n                    handleClosePlaylist();\r\n                  }}\r\n                >\r\n                  {video.titre}{\" \"}\r\n                  <span style={{ fontSize: \"0.9em\", color: \"#bdbdbd\" }}>\r\n                    ({video.sousTitre})\r\n                  </span>\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}