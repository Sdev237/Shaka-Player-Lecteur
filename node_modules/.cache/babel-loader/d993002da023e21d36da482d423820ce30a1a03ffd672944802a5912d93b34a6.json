{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jedeo\\\\Bureau\\\\lecteur player\\\\src\\\\components\\\\VideoPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport shaka from \"shaka-player\";\nimport \"shaka-player/dist/controls.css\";\nimport \"./VideoPlayer.css\";\nimport PlayerHeader from \"./PlayerHeader\";\nimport LiveIndicator from \"./LiveIndicator\";\nimport PlayerControls from \"./PlayerControls\";\nimport PlaylistMenu from \"./PlaylistMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PLAYLIST = [{\n  titre: \"Live Test (DASH-IF)\",\n  sousTitre: \"Flux en direct de test DASH-IF\",\n  url: \"https://livesim.dashif.org/livesim/testpic_2s/Manifest.mpd\",\n  live: true\n}, {\n  titre: \"Captain Luck (Angel One)\",\n  sousTitre: \"Bande-annonce\",\n  url: \"https://storage.googleapis.com/shaka-demo-assets/angel-one/dash.mpd\",\n  live: false\n}, {\n  titre: \"Big Buck Bunny\",\n  sousTitre: \"Démonstration DASH\",\n  url: \"https://dash.akamaized.net/akamai/bbb_30fps/bbb_30fps.mpd\",\n  live: false\n}, {\n  titre: \"Tears of Steel\",\n  sousTitre: \"Film de démo DASH\",\n  url: \"https://storage.googleapis.com/shaka-demo-assets/sintel/dash.mpd\",\n  live: false\n}, {\n  titre: \"Envivio Live\",\n  sousTitre: \"Flux live multi-bitrate\",\n  url: \"https://wowzaec2demo.streamlock.net/live/bigbuckbunny/manifest_mpm4sav_mvtime.mpd\",\n  live: true\n}, {\n  titre: \"Sintel\",\n  sousTitre: \"Film d'animation DASH\",\n  url: \"https://bitmovin-a.akamaihd.net/content/sintel/sintel.mpd\",\n  live: false\n}];\nconst VideoPlayer = () => {\n  _s();\n  const videoRef = useRef(null);\n  const playerRef = useRef(null);\n  const [isLive, setIsLive] = useState(false);\n  const [qualities, setQualities] = useState([]);\n  const [selectedQuality, setSelectedQuality] = useState(\"auto\");\n  const [textTracks, setTextTracks] = useState([]);\n  const [selectedText, setSelectedText] = useState(\"off\");\n  const [audioTracks, setAudioTracks] = useState([]);\n  const [selectedAudio, setSelectedAudio] = useState(\"auto\");\n  const [isAtLiveEdge, setIsAtLiveEdge] = useState(true);\n  const [showPlaylist, setShowPlaylist] = useState(false);\n\n  // L'index de la première VOD pour l'initialisation\n  const firstVodIndex = PLAYLIST.findIndex(v => !v.live);\n  const [currentIndex, setCurrentIndex] = useState(firstVodIndex !== -1 ? firstVodIndex : 0);\n\n  // Déplacer ces lignes ici, après currentIndex\n  const currentVideo = PLAYLIST[currentIndex];\n  const isCurrentlyLive = currentVideo.live;\n\n  // Séparer la playlist VOD de la playlist totale\n  const VOD_PLAYLIST = PLAYLIST.filter(v => !v.live);\n  useEffect(() => {\n    // Détruire l'ancienne instance avant d'en créer une nouvelle\n    if (playerRef.current) {\n      playerRef.current.destroy();\n      playerRef.current = null;\n    }\n    if (videoRef.current) {\n      videoRef.current.removeEventListener(\"timeupdate\", handleLiveEdgeCheck);\n    }\n    const initPlayer = async (url = currentVideo.url, live = currentVideo.live) => {\n      if (!videoRef.current) return;\n      const player = new shaka.Player(videoRef.current);\n      playerRef.current = player;\n      const drmConfig = {\n        servers: {\n          \"com.widevine.alpha\": \"https://license.widevine.com/getlicense\"\n        }\n      };\n      player.configure(\"drm\", drmConfig);\n      const adConfig = {\n        adTagUrl: \"https://pubads.g.doubleclick.net/gampad/ads?iu=/21775744923/external/single_preroll_skippable&sz=640x480&ciu_szs=300x250%2C728x90&gdfp_req=1&output=vast&unviewed_position_start=1&env=vp&impl=s&correlator=\"\n      };\n      player.configure(\"ad\", adConfig);\n      player.addEventListener(\"adaptation\", () => {\n        const tracks = player.getVariantTracks();\n        setQualities(tracks);\n        setAudioTracks(player.getVariantTracks().filter((t, i, arr) => arr.findIndex(tt => tt.language === t.language) === i));\n        setTextTracks(player.getTextTracks());\n      });\n      try {\n        await player.load(url);\n        setIsLive(live);\n        const tracks = player.getVariantTracks();\n        setQualities(tracks);\n        setAudioTracks(player.getVariantTracks().filter((t, i, arr) => arr.findIndex(tt => tt.language === t.language) === i));\n        setTextTracks(player.getTextTracks());\n        if (videoRef.current) {\n          videoRef.current.play().catch(() => {});\n        }\n        // Gestion du live edge\n        if (live) {\n          setIsAtLiveEdge(true);\n          videoRef.current.addEventListener(\"timeupdate\", handleLiveEdgeCheck);\n        }\n      } catch (error) {\n        console.error(\"Erreur lors du chargement de la vidéo:\", error);\n      }\n      // Passage à la vidéo suivante à la fin\n      videoRef.current.onended = () => {\n        if (currentIndex < PLAYLIST.length - 1) {\n          setCurrentIndex(currentIndex + 1);\n        }\n      };\n    };\n    initPlayer();\n    return () => {\n      if (playerRef.current) {\n        playerRef.current.destroy();\n        playerRef.current = null;\n      }\n      if (videoRef.current) {\n        videoRef.current.removeEventListener(\"timeupdate\", handleLiveEdgeCheck);\n      }\n    };\n    // eslint-disable-next-line\n  }, [currentIndex]);\n\n  // Fonction pour vérifier si on est à la pointe du live\n  const handleLiveEdgeCheck = () => {\n    if (!videoRef.current || !playerRef.current || !playerRef.current.isLive()) return;\n    const liveEdge = playerRef.current.seekRange().end;\n    const current = videoRef.current.currentTime;\n    // Si on est à moins de 2 secondes de la fin du buffer, on est \"en direct\"\n    setIsAtLiveEdge(liveEdge - current < 2);\n  };\n\n  // En mode live, désactiver le seek\n  useEffect(() => {\n    if (isCurrentlyLive && videoRef.current) {\n      videoRef.current.addEventListener(\"seeking\", preventSeekLive);\n      return () => {\n        videoRef.current.removeEventListener(\"seeking\", preventSeekLive);\n      };\n    }\n  }, [isCurrentlyLive]);\n  const preventSeekLive = e => {\n    if (!playerRef.current || !playerRef.current.isLive()) return;\n    const liveEdge = playerRef.current.seekRange().end;\n    // Si l'utilisateur tente de reculer, on le remet à la pointe\n    if (videoRef.current.currentTime < liveEdge - 2) {\n      videoRef.current.currentTime = liveEdge;\n    }\n  };\n\n  // Bouton revenir au direct\n  const goToLiveEdge = () => {\n    if (playerRef.current && videoRef.current && playerRef.current.isLive()) {\n      const liveEdge = playerRef.current.seekRange().end;\n      videoRef.current.currentTime = liveEdge;\n      setIsAtLiveEdge(true);\n    }\n  };\n  const avancer = () => {\n    if (videoRef.current) {\n      videoRef.current.currentTime += 10;\n    }\n  };\n  const reculer = () => {\n    if (videoRef.current) {\n      videoRef.current.currentTime -= 10;\n    }\n  };\n  const handleQualityChange = e => {\n    const value = e.target.value;\n    setSelectedQuality(value);\n    if (playerRef.current) {\n      if (value === \"auto\") {\n        playerRef.current.configure({\n          abr: {\n            enabled: true\n          }\n        });\n      } else {\n        playerRef.current.configure({\n          abr: {\n            enabled: false\n          }\n        });\n        const track = qualities.find(q => q.id.toString() === value);\n        if (track) {\n          playerRef.current.selectVariantTrack(track, /* clearBuffer= */true);\n        }\n      }\n    }\n  };\n  const handleTextChange = e => {\n    const value = e.target.value;\n    setSelectedText(value);\n    if (playerRef.current) {\n      if (value === \"off\") {\n        playerRef.current.setTextTrackVisibility(false);\n      } else {\n        playerRef.current.setTextTrackVisibility(true);\n        const track = textTracks.find(t => t.language === value);\n        if (track) {\n          playerRef.current.selectTextLanguage(track.language);\n        }\n      }\n    }\n  };\n  const handleAudioChange = e => {\n    const value = e.target.value;\n    setSelectedAudio(value);\n    if (playerRef.current) {\n      if (value === \"auto\") {\n        playerRef.current.configure({\n          abr: {\n            enabled: true\n          }\n        });\n      } else {\n        playerRef.current.configure({\n          abr: {\n            enabled: false\n          }\n        });\n        const track = audioTracks.find(t => t.language === value);\n        if (track) {\n          playerRef.current.selectAudioLanguage(track.language);\n        }\n      }\n    }\n  };\n  const handleSelectVideo = idx => {\n    setCurrentIndex(idx);\n  };\n  const handleGoLiveOrVod = () => {\n    if (isCurrentlyLive) {\n      // Retour au premier flux VOD\n      const firstVodIndex = PLAYLIST.findIndex(v => !v.live);\n      if (firstVodIndex !== -1) {\n        setCurrentIndex(firstVodIndex);\n      }\n    } else {\n      // Aller au premier flux live\n      const liveIndex = PLAYLIST.findIndex(v => v.live);\n      if (liveIndex !== -1) {\n        setCurrentIndex(liveIndex);\n        if (liveIndex === currentIndex && videoRef.current && playerRef.current) {\n          playerRef.current.load(PLAYLIST[liveIndex].url).then(() => {\n            setIsLive(true);\n            videoRef.current.play().catch(() => {});\n          });\n        }\n      }\n    }\n  };\n  const handleOpenPlaylist = () => setShowPlaylist(true);\n  const handleClosePlaylist = () => setShowPlaylist(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lecteur-container\",\n    children: [/*#__PURE__*/_jsxDEV(PlayerHeader, {\n      titre: currentVideo.titre,\n      sousTitre: currentVideo.sousTitre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lecteur-video-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        controls: true,\n        className: \"lecteur-video\"\n      }, currentIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LiveIndicator, {\n        isLive: isLive,\n        isAtLiveEdge: isAtLiveEdge,\n        goToLiveEdge: goToLiveEdge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlayerControls, {\n      avancer: avancer,\n      reculer: reculer,\n      handleGoLiveOrVod: handleGoLiveOrVod,\n      isCurrentlyLive: isCurrentlyLive,\n      selectedQuality: selectedQuality,\n      handleQualityChange: handleQualityChange,\n      qualities: qualities,\n      selectedAudio: selectedAudio,\n      handleAudioChange: handleAudioChange,\n      audioTracks: audioTracks,\n      selectedText: selectedText,\n      handleTextChange: handleTextChange,\n      textTracks: textTracks,\n      handleOpenPlaylist: handleOpenPlaylist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlaylistMenu, {\n      show: showPlaylist,\n      onClose: handleClosePlaylist,\n      playlist: VOD_PLAYLIST,\n      currentIndex: VOD_PLAYLIST.findIndex(v => v.url === currentVideo.url),\n      onSelect: idx => {\n        const realIdx = PLAYLIST.findIndex(v => v.url === VOD_PLAYLIST[idx].url);\n        handleSelectVideo(realIdx);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"3K4TV/EbPrjzblQuZcJOgm9p3Bs=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","shaka","PlayerHeader","LiveIndicator","PlayerControls","PlaylistMenu","jsxDEV","_jsxDEV","PLAYLIST","titre","sousTitre","url","live","VideoPlayer","_s","videoRef","playerRef","isLive","setIsLive","qualities","setQualities","selectedQuality","setSelectedQuality","textTracks","setTextTracks","selectedText","setSelectedText","audioTracks","setAudioTracks","selectedAudio","setSelectedAudio","isAtLiveEdge","setIsAtLiveEdge","showPlaylist","setShowPlaylist","firstVodIndex","findIndex","v","currentIndex","setCurrentIndex","currentVideo","isCurrentlyLive","VOD_PLAYLIST","filter","current","destroy","removeEventListener","handleLiveEdgeCheck","initPlayer","player","Player","drmConfig","servers","configure","adConfig","adTagUrl","addEventListener","tracks","getVariantTracks","t","i","arr","tt","language","getTextTracks","load","play","catch","error","console","onended","length","liveEdge","seekRange","end","currentTime","preventSeekLive","e","goToLiveEdge","avancer","reculer","handleQualityChange","value","target","abr","enabled","track","find","q","id","toString","selectVariantTrack","handleTextChange","setTextTrackVisibility","selectTextLanguage","handleAudioChange","selectAudioLanguage","handleSelectVideo","idx","handleGoLiveOrVod","liveIndex","then","handleOpenPlaylist","handleClosePlaylist","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","controls","show","onClose","playlist","onSelect","realIdx","_c","$RefreshReg$"],"sources":["C:/Users/jedeo/Bureau/lecteur player/src/components/VideoPlayer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport shaka from \"shaka-player\";\r\nimport \"shaka-player/dist/controls.css\";\r\nimport \"./VideoPlayer.css\";\r\nimport PlayerHeader from \"./PlayerHeader\";\r\nimport LiveIndicator from \"./LiveIndicator\";\r\nimport PlayerControls from \"./PlayerControls\";\r\nimport PlaylistMenu from \"./PlaylistMenu\";\r\n\r\nconst PLAYLIST = [\r\n  {\r\n    titre: \"Live Test (DASH-IF)\",\r\n    sousTitre: \"Flux en direct de test DASH-IF\",\r\n    url: \"https://livesim.dashif.org/livesim/testpic_2s/Manifest.mpd\",\r\n    live: true,\r\n  },\r\n  {\r\n    titre: \"Captain Luck (Angel One)\",\r\n    sousTitre: \"Bande-annonce\",\r\n    url: \"https://storage.googleapis.com/shaka-demo-assets/angel-one/dash.mpd\",\r\n    live: false,\r\n  },\r\n  {\r\n    titre: \"Big Buck Bunny\",\r\n    sousTitre: \"Démonstration DASH\",\r\n    url: \"https://dash.akamaized.net/akamai/bbb_30fps/bbb_30fps.mpd\",\r\n    live: false,\r\n  },\r\n  {\r\n    titre: \"Tears of Steel\",\r\n    sousTitre: \"Film de démo DASH\",\r\n    url: \"https://storage.googleapis.com/shaka-demo-assets/sintel/dash.mpd\",\r\n    live: false,\r\n  },\r\n  {\r\n    titre: \"Envivio Live\",\r\n    sousTitre: \"Flux live multi-bitrate\",\r\n    url: \"https://wowzaec2demo.streamlock.net/live/bigbuckbunny/manifest_mpm4sav_mvtime.mpd\",\r\n    live: true,\r\n  },\r\n  {\r\n    titre: \"Sintel\",\r\n    sousTitre: \"Film d'animation DASH\",\r\n    url: \"https://bitmovin-a.akamaihd.net/content/sintel/sintel.mpd\",\r\n    live: false,\r\n  },\r\n];\r\n\r\nconst VideoPlayer = () => {\r\n  const videoRef = useRef(null);\r\n  const playerRef = useRef(null);\r\n  const [isLive, setIsLive] = useState(false);\r\n  const [qualities, setQualities] = useState([]);\r\n  const [selectedQuality, setSelectedQuality] = useState(\"auto\");\r\n  const [textTracks, setTextTracks] = useState([]);\r\n  const [selectedText, setSelectedText] = useState(\"off\");\r\n  const [audioTracks, setAudioTracks] = useState([]);\r\n  const [selectedAudio, setSelectedAudio] = useState(\"auto\");\r\n  const [isAtLiveEdge, setIsAtLiveEdge] = useState(true);\r\n  const [showPlaylist, setShowPlaylist] = useState(false);\r\n\r\n  // L'index de la première VOD pour l'initialisation\r\n  const firstVodIndex = PLAYLIST.findIndex((v) => !v.live);\r\n  const [currentIndex, setCurrentIndex] = useState(\r\n    firstVodIndex !== -1 ? firstVodIndex : 0\r\n  );\r\n\r\n  // Déplacer ces lignes ici, après currentIndex\r\n  const currentVideo = PLAYLIST[currentIndex];\r\n  const isCurrentlyLive = currentVideo.live;\r\n\r\n  // Séparer la playlist VOD de la playlist totale\r\n  const VOD_PLAYLIST = PLAYLIST.filter((v) => !v.live);\r\n\r\n  useEffect(() => {\r\n    // Détruire l'ancienne instance avant d'en créer une nouvelle\r\n    if (playerRef.current) {\r\n      playerRef.current.destroy();\r\n      playerRef.current = null;\r\n    }\r\n    if (videoRef.current) {\r\n      videoRef.current.removeEventListener(\"timeupdate\", handleLiveEdgeCheck);\r\n    }\r\n    const initPlayer = async (\r\n      url = currentVideo.url,\r\n      live = currentVideo.live\r\n    ) => {\r\n      if (!videoRef.current) return;\r\n      const player = new shaka.Player(videoRef.current);\r\n      playerRef.current = player;\r\n      const drmConfig = {\r\n        servers: {\r\n          \"com.widevine.alpha\": \"https://license.widevine.com/getlicense\",\r\n        },\r\n      };\r\n      player.configure(\"drm\", drmConfig);\r\n      const adConfig = {\r\n        adTagUrl:\r\n          \"https://pubads.g.doubleclick.net/gampad/ads?iu=/21775744923/external/single_preroll_skippable&sz=640x480&ciu_szs=300x250%2C728x90&gdfp_req=1&output=vast&unviewed_position_start=1&env=vp&impl=s&correlator=\",\r\n      };\r\n      player.configure(\"ad\", adConfig);\r\n      player.addEventListener(\"adaptation\", () => {\r\n        const tracks = player.getVariantTracks();\r\n        setQualities(tracks);\r\n        setAudioTracks(\r\n          player\r\n            .getVariantTracks()\r\n            .filter(\r\n              (t, i, arr) =>\r\n                arr.findIndex((tt) => tt.language === t.language) === i\r\n            )\r\n        );\r\n        setTextTracks(player.getTextTracks());\r\n      });\r\n      try {\r\n        await player.load(url);\r\n        setIsLive(live);\r\n        const tracks = player.getVariantTracks();\r\n        setQualities(tracks);\r\n        setAudioTracks(\r\n          player\r\n            .getVariantTracks()\r\n            .filter(\r\n              (t, i, arr) =>\r\n                arr.findIndex((tt) => tt.language === t.language) === i\r\n            )\r\n        );\r\n        setTextTracks(player.getTextTracks());\r\n        if (videoRef.current) {\r\n          videoRef.current.play().catch(() => {});\r\n        }\r\n        // Gestion du live edge\r\n        if (live) {\r\n          setIsAtLiveEdge(true);\r\n          videoRef.current.addEventListener(\"timeupdate\", handleLiveEdgeCheck);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Erreur lors du chargement de la vidéo:\", error);\r\n      }\r\n      // Passage à la vidéo suivante à la fin\r\n      videoRef.current.onended = () => {\r\n        if (currentIndex < PLAYLIST.length - 1) {\r\n          setCurrentIndex(currentIndex + 1);\r\n        }\r\n      };\r\n    };\r\n    initPlayer();\r\n    return () => {\r\n      if (playerRef.current) {\r\n        playerRef.current.destroy();\r\n        playerRef.current = null;\r\n      }\r\n      if (videoRef.current) {\r\n        videoRef.current.removeEventListener(\"timeupdate\", handleLiveEdgeCheck);\r\n      }\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [currentIndex]);\r\n\r\n  // Fonction pour vérifier si on est à la pointe du live\r\n  const handleLiveEdgeCheck = () => {\r\n    if (!videoRef.current || !playerRef.current || !playerRef.current.isLive())\r\n      return;\r\n    const liveEdge = playerRef.current.seekRange().end;\r\n    const current = videoRef.current.currentTime;\r\n    // Si on est à moins de 2 secondes de la fin du buffer, on est \"en direct\"\r\n    setIsAtLiveEdge(liveEdge - current < 2);\r\n  };\r\n\r\n  // En mode live, désactiver le seek\r\n  useEffect(() => {\r\n    if (isCurrentlyLive && videoRef.current) {\r\n      videoRef.current.addEventListener(\"seeking\", preventSeekLive);\r\n      return () => {\r\n        videoRef.current.removeEventListener(\"seeking\", preventSeekLive);\r\n      };\r\n    }\r\n  }, [isCurrentlyLive]);\r\n\r\n  const preventSeekLive = (e) => {\r\n    if (!playerRef.current || !playerRef.current.isLive()) return;\r\n    const liveEdge = playerRef.current.seekRange().end;\r\n    // Si l'utilisateur tente de reculer, on le remet à la pointe\r\n    if (videoRef.current.currentTime < liveEdge - 2) {\r\n      videoRef.current.currentTime = liveEdge;\r\n    }\r\n  };\r\n\r\n  // Bouton revenir au direct\r\n  const goToLiveEdge = () => {\r\n    if (playerRef.current && videoRef.current && playerRef.current.isLive()) {\r\n      const liveEdge = playerRef.current.seekRange().end;\r\n      videoRef.current.currentTime = liveEdge;\r\n      setIsAtLiveEdge(true);\r\n    }\r\n  };\r\n\r\n  const avancer = () => {\r\n    if (videoRef.current) {\r\n      videoRef.current.currentTime += 10;\r\n    }\r\n  };\r\n  const reculer = () => {\r\n    if (videoRef.current) {\r\n      videoRef.current.currentTime -= 10;\r\n    }\r\n  };\r\n  const handleQualityChange = (e) => {\r\n    const value = e.target.value;\r\n    setSelectedQuality(value);\r\n    if (playerRef.current) {\r\n      if (value === \"auto\") {\r\n        playerRef.current.configure({ abr: { enabled: true } });\r\n      } else {\r\n        playerRef.current.configure({ abr: { enabled: false } });\r\n        const track = qualities.find((q) => q.id.toString() === value);\r\n        if (track) {\r\n          playerRef.current.selectVariantTrack(track, /* clearBuffer= */ true);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleTextChange = (e) => {\r\n    const value = e.target.value;\r\n    setSelectedText(value);\r\n    if (playerRef.current) {\r\n      if (value === \"off\") {\r\n        playerRef.current.setTextTrackVisibility(false);\r\n      } else {\r\n        playerRef.current.setTextTrackVisibility(true);\r\n        const track = textTracks.find((t) => t.language === value);\r\n        if (track) {\r\n          playerRef.current.selectTextLanguage(track.language);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleAudioChange = (e) => {\r\n    const value = e.target.value;\r\n    setSelectedAudio(value);\r\n    if (playerRef.current) {\r\n      if (value === \"auto\") {\r\n        playerRef.current.configure({ abr: { enabled: true } });\r\n      } else {\r\n        playerRef.current.configure({ abr: { enabled: false } });\r\n        const track = audioTracks.find((t) => t.language === value);\r\n        if (track) {\r\n          playerRef.current.selectAudioLanguage(track.language);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleSelectVideo = (idx) => {\r\n    setCurrentIndex(idx);\r\n  };\r\n  const handleGoLiveOrVod = () => {\r\n    if (isCurrentlyLive) {\r\n      // Retour au premier flux VOD\r\n      const firstVodIndex = PLAYLIST.findIndex((v) => !v.live);\r\n      if (firstVodIndex !== -1) {\r\n        setCurrentIndex(firstVodIndex);\r\n      }\r\n    } else {\r\n      // Aller au premier flux live\r\n      const liveIndex = PLAYLIST.findIndex((v) => v.live);\r\n      if (liveIndex !== -1) {\r\n        setCurrentIndex(liveIndex);\r\n        if (\r\n          liveIndex === currentIndex &&\r\n          videoRef.current &&\r\n          playerRef.current\r\n        ) {\r\n          playerRef.current.load(PLAYLIST[liveIndex].url).then(() => {\r\n            setIsLive(true);\r\n            videoRef.current.play().catch(() => {});\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleOpenPlaylist = () => setShowPlaylist(true);\r\n  const handleClosePlaylist = () => setShowPlaylist(false);\r\n\r\n  return (\r\n    <div className=\"lecteur-container\">\r\n      <PlayerHeader\r\n        titre={currentVideo.titre}\r\n        sousTitre={currentVideo.sousTitre}\r\n      />\r\n      <div className=\"lecteur-video-wrapper\">\r\n        <video\r\n          ref={videoRef}\r\n          key={currentIndex}\r\n          controls\r\n          className=\"lecteur-video\"\r\n        />\r\n        <LiveIndicator\r\n          isLive={isLive}\r\n          isAtLiveEdge={isAtLiveEdge}\r\n          goToLiveEdge={goToLiveEdge}\r\n        />\r\n      </div>\r\n      <PlayerControls\r\n        avancer={avancer}\r\n        reculer={reculer}\r\n        handleGoLiveOrVod={handleGoLiveOrVod}\r\n        isCurrentlyLive={isCurrentlyLive}\r\n        selectedQuality={selectedQuality}\r\n        handleQualityChange={handleQualityChange}\r\n        qualities={qualities}\r\n        selectedAudio={selectedAudio}\r\n        handleAudioChange={handleAudioChange}\r\n        audioTracks={audioTracks}\r\n        selectedText={selectedText}\r\n        handleTextChange={handleTextChange}\r\n        textTracks={textTracks}\r\n        handleOpenPlaylist={handleOpenPlaylist}\r\n      />\r\n      <PlaylistMenu\r\n        show={showPlaylist}\r\n        onClose={handleClosePlaylist}\r\n        playlist={VOD_PLAYLIST}\r\n        currentIndex={VOD_PLAYLIST.findIndex((v) => v.url === currentVideo.url)}\r\n        onSelect={(idx) => {\r\n          const realIdx = PLAYLIST.findIndex(\r\n            (v) => v.url === VOD_PLAYLIST[idx].url\r\n          );\r\n          handleSelectVideo(realIdx);\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}